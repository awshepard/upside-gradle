buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.9.1'
        classpath 'com.netflix.nebula:nebula-release-plugin:4.1.0'
    }
}


allprojects {
    def maven_user = System.getenv('UPSIDE_MAVEN_USER')
    def maven_user_api_key = System.getenv('UPSIDE_MAVEN_API_KEY')

    if (maven_user == null) {
        print("UPSIDE_MAVEN_USER is null")
    }

    apply plugin: nebula.plugin.publishing.publications.JavadocJarPlugin
    apply plugin: nebula.plugin.publishing.publications.SourceJarPlugin
    apply plugin: nebula.plugin.release.ReleasePlugin
    apply plugin: nebula.plugin.publishing.maven.MavenPublishPlugin

    repositories {
        maven {
            credentials {
                username = maven_user
                password = maven_user_api_key
            }
            url 'https://upside.artifactoryonline.com/upside/repo/'
        }
        mavenLocal()
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username = maven_user
                    password = maven_user_api_key
                }
                if(project.version.toString().contains('SNAPSHOT')) {
                    url 'https://upside.artifactoryonline.com/upside/libs-snapshot-local/'
                } else {
                    url 'https://upside.artifactoryonline.com/upside/libs-release-local/'
                }
            }
        }
    }


    apply plugin: 'idea'
    idea {
        module {
            downloadJavadoc = true // defaults to false
            downloadSources = true
        }
    }
}

